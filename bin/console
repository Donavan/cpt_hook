#!/usr/bin/env ruby

require "bundler/setup"
require "cpt_hook"
require "pry"


my_hooks = CptHook.define_hooks do
  # Simple case call one fn with args
  before(:some_fn).call(:my_hook).with(:var1, :var2)

  # Complex case, add multiple calls to the fn block style
  before(:some_other_fn) do
    call(:my_other_hook).with(:var3, :var4)
    call(:yet_another_hook)
    call( lambda { | hooked_obj | hooked_obj.some_fn }).with(:self)
  end

  # Complex case, add multiple calls to the fn fluent style
  before(:some_other_fn).call(:my_other_hook).with(:var3, :var4)
                        .call(:yet_another_hook)
                        .call( lambda { | hooked_obj | hooked_obj.some_fn }).with(:self)

end

binding.pry

puts 'Console exiting'  # This is just to ensure a line exists below the pry
